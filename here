const filterNodes = (nodes, term, parentName = '') => {
  return nodes.reduce((filtered, node) => {
    const nodeMatches = node.name.toLowerCase().includes(term);
    const childMatches = node.children && filterNodes(node.children, term, node.name).length > 0;

    if (nodeMatches || childMatches || node.name.toLowerCase() === parentName.toLowerCase()) {
      // Include only the current node or its parent in the result
      filtered.push({
        ...node,
        children: filterNodes(node.children, term, node.name)
      });
    }

    return filtered;
  }, []);
};
  
  
