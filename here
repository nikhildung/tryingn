
import React, { useState } from "react";
import { TreeView } from "@mui/x-tree-view/TreeView";
import { TreeItem } from "@mui/x-tree-view/TreeItem";
import TilesRendering from "../ExploreAPI/TilesRendering"; // Replace with the actual path to your TilesRendering component

const data = [
    {
      "id": "1",
      "src": "https://www.kotak.com/content/dam/Kotak/product_card_images/cms-payment-services.jpeg.transform/transformer-width-360-height-202/image.jpeg",
      "name": "Payments",
      "Description": "This is Payments API",
      "children": [
        {
          "id": "11",
          "src": "https://www.kotak.com/content/dam/Kotak/product_card_images/cms-payment-services.jpeg.transform/transformer-width-360-height-202/image.jpeg",
          "name": "CMS Payments",
          "Description": "This is CMS Payments API",
          "children": []
        },
        {
          "id": "12",
          "src": "https://www.kotak.com/content/dam/Kotak/product_card_images/cms-payment-services.jpeg.transform/transformer-width-360-height-202/image.jpeg",
          "name": "24*7 Payments",
          "Description": "This is 24*7 Payments API",
          "children": []
        },
        {
          "id": "13",
          "src": "https://www.kotak.com/content/dam/Kotak/product_card_images/cms-payment-services.jpeg.transform/transformer-width-360-height-202/image.jpeg",
          "name": "Remittance",
          "Description": "This is Remittance Payments API",
          "children": []
        },
        {
          "id": "14",
          "src": "https://www.kotak.com/content/dam/Kotak/product_card_images/cms-payment-services.jpeg.transform/transformer-width-360-height-202/image.jpeg",
          "name": "UPI Pay",
          "Description": "This is UPI Payments API",
          "children": []
        }
      ]
    },
    {
      "id": "2",
      "src": "https://www.kotak.com/content/dam/Kotak/product_card_images/cms-payment-services.jpeg.transform/transformer-width-360-height-202/image.jpeg",
      "name": "Account Services",
      "Description": "This is Account Services API",
      "children": [
        {
          "id": "21",
          "src": "https://www.kotak.com/content/dam/Kotak/product_card_images/cms-payment-services.jpeg.transform/transformer-width-360-height-202/image.jpeg",
          "name": "Balance",
          "Description": "This is Account Balance API",
          "children": []
        },
        {
          "id": "22",
          "src": "https://www.kotak.com/content/dam/Kotak/product_card_images/cms-payment-services.jpeg.transform/transformer-width-360-height-202/image.jpeg",
          "name": "Statement",
          "Description": "This is Account Statements API",
          "children": []
        }
      ]
    },
    {
      "id": "3",
      "src": "https://www.kotak.com/content/dam/Kotak/product_card_images/cms-payment-services.jpeg.transform/transformer-width-360-height-202/image.jpeg",
      "name": "Collections",
      "Description": "This is Collection API",
      "children": [
        {
          "id": "31",
          "src": "https://www.kotak.com/content/dam/Kotak/product_card_images/cms-payment-services.jpeg.transform/transformer-width-360-height-202/image.jpeg",
          "name": "NACH",
          "Description": "This is NACH API",
          "children": []
        },
        {
          "id": "32",
          "src": "https://www.kotak.com/content/dam/Kotak/product_card_images/cms-payment-services.jpeg.transform/transformer-width-360-height-202/image.jpeg",
          "name": "E-collect",
          "Description": "This is E-collect API",
          "children": []
        },
        {
          "id": "33",
          "src": "https://www.kotak.com/content/dam/Kotak/product_card_images/cms-payment-services.jpeg.transform/transformer-width-360-height-202/image.jpeg",
          "name": "BBPS",
          "Description": "This is BBPS API",
          "children": []
        },
        {
          "id": "34",
          "src": "https://www.kotak.com/content/dam/Kotak/product_card_images/cms-payment-services.jpeg.transform/transformer-width-360-height-202/image.jpeg",
          "name": "UPI Collect",
          "Description": "This is UPI Collect API",
          "children": []
        },
        {
          "id": "35",
          "src": "https://www.kotak.com/content/dam/Kotak/product_card_images/cms-payment-services.jpeg.transform/transformer-width-360-height-202/image.jpeg",
          "name": "recurring",
          "Description": "This is UPI recurring API",
          "children": []
        }
      ]
    },
    {
      "id": "4",
      "src": "https://www.kotak.com/content/dam/Kotak/product_card_images/cms-payment-services.jpeg.transform/transformer-width-360-height-202/image.jpeg",
      "name": "Acquiring",
      "Description": "This is Acquiring API",
      "children": [
        {
          "id": "41",
          "src": "https://www.kotak.com/content/dam/Kotak/product_card_images/cms-payment-services.jpeg.transform/transformer-width-360-height-202/image.jpeg",
          "name": "Acquiring",
          "Description": "This is Acquiring API",
          "children": []
        }
      ]
    }
  ]
  

const Homepage = () => {
  const [selectedNode, setSelectedNode] = useState(null);

  const handleNodeSelect = (event, nodeId) => {
    // Find the selected node from the data based on the nodeId
    const findNode = (nodes) => {
      for (let node of nodes) {
        if (node.id === nodeId) {
          return node;
        }
        if (node.children) {
          const foundInChildren = findNode(node.children);
          if (foundInChildren) {
            return foundInChildren;
          }
        }
      }
      return null;
    };

    const selectedData = findNode(data);
    setSelectedNode(selectedData);
  };

  const renderTree = (nodes) => (
    <TreeItem key={nodes.id} nodeId={nodes.id} label={nodes.name}>
      {Array.isArray(nodes.children)
        ? nodes.children.map((node) => renderTree(node))
        : null}
    </TreeItem>
  );

  const renderChildrenAsTiles = (selectedNode) => {
    if (selectedNode && selectedNode.children) {
      return (
        <div>
          {selectedNode.children.map((child) => (
            <TilesRendering key={child.id} selectedNode={child} />
          ))}
        </div>
      );
    }
    return null;
  };

  return (
    <div style={{ display: "flex" }}>
      <TreeView
        defaultCollapseIcon={<div>-</div>}
        defaultExpandIcon={<span>+</span>}
        onNodeSelect={handleNodeSelect}
      >
        {data.map((node) => renderTree(node))}
      </TreeView>

      <div style={{ marginLeft: "20px" }}>
        {renderChildrenAsTiles(selectedNode)}
      </div>
    </div>
  );
};

export default Homepage;
