import React, { useState } from "react";
import "devextreme/dist/css/dx.light.css";
import "./TreeView.css";
import "./ExploreAPIPage.css";
import TreeView from "devextreme-react/tree-view";
import products from "./Products";
import TilesRendering from "./TilesRendering";

const App = () => {
  const Categories = products.filter((node) => {
    return node.categoryId === null;
  });
  const [selectedNode, setSelectedNode] = useState("");

  const selectProduct = (e) => {
    if (e.itemData.categoryId === null) {
      // Update selectedNode to the clicked parent category
      setSelectedNode(e.itemData);
    } else if (e.itemData.categoryId.length === 1) {
      // Handle navigation or any other action for clicking a parent category
      window.location.href = "apitemplate";
    }
  };

  return (
    <>
      <aside className="API_aside">
        <TreeView
          id="treeView"
          dataSource={Categories}
          dataStructure="plain"
          keyExpr="ID"
          displayExpr="name"
          parentIdExpr="categoryId"
          searchEnabled={true}
          searchMode="contains"
          selectionMode="single"
          selectByClick={true}
          onItemSelectionChanged={selectProduct}
        />
      </aside>
      <div className="featured_products_list">
        {selectedNode && (
          <TreeView
            id="childTreeView"
            dataSource={products.filter(
              (product) => product.categoryId === selectedNode.ID
            )}
            dataStructure="plain"
            keyExpr="ID"
            displayExpr="name"
            parentIdExpr="categoryId"
            searchEnabled={true}
            searchMode="contains"
            selectionMode="single"
            selectByClick={true}
            onItemSelectionChanged={selectProduct}
          />
        )}
        {!selectedNode && (
          <TilesRendering categories={Categories} />
        )}
      </div>
    </>
  );
};

export default App;
