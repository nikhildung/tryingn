import React, { useState } from "react";
import "devextreme/dist/css/dx.light.css";
import "./TreeView.css";
import "./ExploreAPIPage.css";
import TreeView from "devextreme-react/tree-view";
import products from "./Products";
import TilesRendering from "./TilesRendering";

const App = () => {
  const [selectedNode, setSelectedNode] = useState(products[2]);

  const selectProduct = (e) => {
    if (e.itemData.categoryId === null) {
      // Toggle the expansion of the selected node
      setSelectedNode((prevNode) =>
        prevNode.ID === e.itemData.ID
          ? { ...prevNode, expanded: !prevNode.expanded }
          : e.itemData
      );
    } else if (e.itemData.categoryId.length === 1) {
      // Update selectedNode to the clicked parent category
      window.location.href = "apitemplate";
      setSelectedNode(e.itemData);
    }
  };


  return (

<>
    <aside className="API_aside">

      <TreeView
        id="treeView"
        dataSource={products}
        dataStructure="plain"
        keyExpr="ID"
        displayExpr="name"
        parentIdExpr="categoryId"
        searchEnabled={true}
        searchMode="contains"
        selectionMode="single"
        selectByClick={true}
        onItemSelectionChanged={selectProduct}
        />

      {/* {renderProductDetails()}
       */}

  </aside>
<div className="featured_products_list">

        {products
          .filter((product) => product.categoryId === selectedNode.ID)
          .map((child) => (
            <TilesRendering key={child.ID} selectedNode={child} />
            ))}
      </div>
    </>
  );
};

export default App;
